language: cpp

install:
  # Create virtual environment for Python 3
  - python3 -m venv ~/virtual_env
  - source ~/virtual_env/bin/activate

  # Fail if we are using the wrong Python
  - python --version | grep -iE 'python\s*3'
  - pip    --version | grep -iE 'python\s*3'

  # venv manages to find pip v9.0, but version 20.2 is current
  - pip install --upgrade pip

  # Install Conan using Python 3.
  - pip install conan cmake

  # Fail if we can't run Conan.
  - conan --version

jobs:
  include:
    - os: osx
      compiler: gcc
      osx_image: xcode11.2    # includes gcc-9 by default
      env:
        - GCC_VER="9"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}
    - os: osx
      compiler: clang
      osx_image: xcode11.2
      env:
        - MATRIX_EVAL=""
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - GCC_VER="9"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # I couldn't get ${GCC_VER} in here successfully
            - gcc-9
            - g++-9
            - doxygen
            - python3-venv
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}
    - os: linux
      dist: bionic
      compiler: clang
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
      addons: { apt: { packages: ['doxygen', 'python3-venv'] } }


before_script:
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build
  - cd build
  - cmake -D ENABLE_COVERAGE:BOOL=TRUE ../
  - cmake --build . -- -j2
  - ctest -j2



